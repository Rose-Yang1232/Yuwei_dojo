#!/opt/pwn.college/python
import psutil, atexit, time, sys, os, requests
from selenium import webdriver
from selenium.webdriver.firefox.options import Options as FirefoxOptions
from selenium.webdriver.firefox.service import Service as FirefoxService
from selenium.webdriver.support.ui import WebDriverWait
from selenium.common.exceptions import TimeoutException

os.setuid(os.geteuid())
os.environ.clear()
os.environ["PATH"] = "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"

options = FirefoxOptions(); options.add_argument("--headless")
service = FirefoxService(log_path="/dev/null")
browser = webdriver.Firefox(service=service, options=options)
atexit.register(browser.quit)

if 80 not in {s.laddr.port for s in psutil.net_connections(kind="inet") if s.status == "LISTEN"}:
    print("Service doesn't seem to be running?"); sys.exit(1)

URL = "http://challenge.localhost:80/"
KEY = "xss-signal"   # change to secret token if you want participants to read the victim

while True:
    try: browser.get(URL)
    except Exception: time.sleep(.5); continue

    # wait up to 1s for localStorage key to be set to '1'
    try: WebDriverWait(browser,1).until(lambda d: d.execute_script(f"return localStorage.getItem('{KEY}')==='1'"))
    except TimeoutException: time.sleep(.5); continue
    else:
        try: flag = open("/flag").read().strip()
        except Exception: flag = None
        if flag:
            try: requests.post(URL, data={"content": flag}, timeout=3)
            except Exception: pass
            try: browser.execute_script(f"localStorage.removeItem('{KEY}')")
            except Exception: pass
    time.sleep(1)
